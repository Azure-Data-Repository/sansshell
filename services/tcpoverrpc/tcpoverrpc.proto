/* Copyright (c) 2024 Snowflake Inc. All rights reserved.

   Licensed under the Apache License, Version 2.0 (the
   "License"); you may not use this file except in compliance
   with the License.  You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing,
   software distributed under the License is distributed on an
   "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
   KIND, either express or implied.  See the License for the
   specific language governing permissions and limitations
   under the License.
*/

syntax = "proto3";

import "google/protobuf/descriptor.proto";
import "google/protobuf/empty.proto";

option go_package = "github.com/Snowflake-Labs/sansshell/tcpoverrpc";

package TCPOverRPC;

// The TCPOverRPC service definition
service TCPOverRPC {
  // Ok signals if the target is reachable.
  rpc Ok(HostTCPRequest) returns (google.protobuf.Empty) {}
}

message HostTCPRequest {
  // Hostname can be specified as either an ip address or domain name.
  string hostname = 1;
  // The destination port.
  int32 port = 2;
  // Maximum amount of time (in seconds) to wait for a TCP connect to complete.
  int32 timeoutSeconds = 3;
}
