syntax="proto3";

package Service;
option go_package = "github.com/Snowflake-Labs/sansshell/services/service";

// A SystemType specifies the service management system
// on which to operate.
enum SystemType {
  SYSTEM_TYPE_UKNOWN = 0;
  SYSTEM_TYPE_SYSTEMD = 1;
};

// The operational status of the service.
enum ServiceStatus {
  STATUS_UNKNOWN = 0;
  STATUS_RUNNING = 1;
  STATUS_STOPPED = 2;
}

// A request to list all configured services for a single
// system type.
message ListRequest {
  SystemType system_type = 1;
}

// A list of all configured services, with their attendent
// status.
message ListReply {
  SystemType system_type = 1;
  message ServiceEntry {
    string service_name = 1;
    ServiceStatus status = 2;
  }
  repeated ServiceEntry services = 2;
}

// A request to list the status of a single service.
message StatusRequest {
  SystemType system_type = 1;
  string service_name = 2;
}

// A StatusReply contains the operational status of
// a single service.
message StatusReply {
  SystemType system_type = 1;
  string service_name = 2;
  ServiceStatus status = 3;
}

// A request to alter the state of a single service.
message ActionRequest {
  SystemType system_type = 1;
  string service_name = 2;
  enum Action {
    ACTION_UNKNOWN = 0;
    ACTION_START = 1;
    ACTION_STOP = 2;
    ACTION_RESTART = 3;
  };
  Action action = 3;
}

// The result of a request to alter the status of a service.
message ActionReply {
  SystemType system_type = 1;
  string service_name = 2;
  string debug_output = 3;
}

service Service {
  // List returns a list of services with attendent status.
  rpc List(ListRequest) returns (ListReply) {}
  // Status requests the status of a single service.
  rpc Status(StatusRequest) returns (StatusReply) {}
  // Action alters the status of a single service.
  rpc Action(ActionRequest) returns (ActionReply) {}
}
